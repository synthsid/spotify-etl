services:
  postgres:
    image: postgres:13
    env_file: .env
    environment:
      POSTGRES_USER: ${AIRFLOW_DB_USER}
      POSTGRES_PASSWORD: ${AIRFLOW_DB_PASS}
      POSTGRES_DB: ${AIRFLOW_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init-multiple-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - ./postgres-config/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres-config/pg_hba.conf:/etc/postgresql/pg_hba.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf -c hba_file=/etc/postgresql/pg_hba.conf
    ports:
      - "${DB_HOST_PORT}:${DB_CONTAINER_PORT}"

  airflow-init:
    image: apache/airflow:2.8.1
    depends_on:
      - postgres
    volumes:
      - ./wait-for-postgres.sh:/wait-for-postgres.sh
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASS}@postgres/${AIRFLOW_DB}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
      AIRFLOW_ADMIN_USERNAME: ${AIRFLOW_ADMIN_USERNAME}
      AIRFLOW_ADMIN_PASSWORD: ${AIRFLOW_ADMIN_PASSWORD}
    entrypoint:
      - /bin/bash
      - -c
      - |
        /wait-for-postgres.sh postgres
        airflow db init
        airflow users create \
          --username "$AIRFLOW_ADMIN_USERNAME" \
          --firstname Air \
          --lastname Flow \
          --role Admin \
          --email admin@example.com \
          --password "$AIRFLOW_ADMIN_PASSWORD"
    restart: "no"

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - airflow-init
    ports:
      - "8080:8080"
    env_file: .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASS}@postgres/${AIRFLOW_DB}
      CLIENT_ID: ${CLIENT_ID}
      CLIENT_SECRET: ${CLIENT_SECRET}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
      PYTHONPATH: /opt/airflow:/opt/airflow/scripts:/opt/airflow/scripts/extract:/opt/airflow/scripts/utils
    volumes:
      - .:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./requirements.txt:/requirements.txt
    command: webserver
    restart: always

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - airflow-webserver
    env_file: .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PASS}@postgres/${AIRFLOW_DB}
      CLIENT_ID: ${CLIENT_ID}
      CLIENT_SECRET: ${CLIENT_SECRET}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
      PYTHONPATH: /opt/airflow:/opt/airflow/scripts:/opt/airflow/scripts/extract:/opt/airflow/scripts/utils
    volumes:
      - .:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./requirements.txt:/requirements.txt
    command: scheduler
    restart: always

volumes:
  postgres_data:
